@model DetailsModel

@{
    ViewData["Title"] = $"Task #{Model.ToDoTask.Id} Details";
}

<div class="display-6">@ViewData["Title"]</div>

<div class="animate shadow-sm bg-white border rounded overflow-hidden px-3 py-4 mt-5 mb-5">
    <div>
        <div class="row mb-3">
            <div class="col-1 text-primary fw-bold">Created</div>
            <div class="col-md-11">
                @Model.ToDoTask.CreatedAt.ToString("dd.MM.yyyy, HH:mm:ss")
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-1 text-primary fw-bold">Text</div>
            <div class="col-md-11">
                @if (Model.ToDoTask.CompletedAt is null)
                {
                    <div>
                        <form asp-controller="ToDoList" asp-action="EditText">
                            <input type="hidden" name="id" />
                            <textarea class="form-control mb-2" name="text" placeholder="New text of your task">@Model.ToDoTask.Text</textarea>
                            <button type="submit" class="btn btn-primary">Update text</button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="text-wrap">
                        @Model.ToDoTask.Text
                    </div>
                }
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-1 text-primary fw-bold">Completed</div>
            <div class="col-md-11">
                @if (Model.ToDoTask.CompletedAt is null)
                {
                    <span>Not yet</span>
                }
                else
                {
                    @Model.ToDoTask.CompletedAt.Value.ToString("dd.MM.yyyy, HH:mm:ss")
                }
            </div>
        </div>
    </div>

    <div class="mt-3 d-flex align-self-end">
        <form asp-controller="ToDoList" asp-action="Remove">
            <input type="hidden" name="taskId" value="@Model.ToDoTask.Id" />
            <input type="submit" class="me-1 btn btn-danger" value="Remove" />
        </form>

        @if (Model.ToDoTask.CompletedAt is null)
        {
            <form asp-controller="ToDoList" asp-action="MarkAsCompleted">
                <input type="hidden" name="taskId" value="@Model.ToDoTask.Id" />
                <input type="submit" class="btn btn-success me-1" value="Mark as completed" />
            </form>
        }
    </div>
</div>

@await Html.PartialAsync("_LastAdded", Model.QueuedTasks)